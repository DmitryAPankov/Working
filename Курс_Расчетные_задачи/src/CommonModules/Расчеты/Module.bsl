

// ==== УНИВЕРСАЛЬНЫЕ ПРОЦЕДУРЫ ====

// Универсальная процедура заполнения набора записей
Процедура ЗаполнитьНаборЗаписей(ТекстЗапроса, ДокументСсылка, НаборЗаписей) Экспорт
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
	КонецЦикла;
КонецПроцедуры

// Универсальная расчетная процедура
Процедура РассчитатьЗаписиРегистраРасчета(НаборЗаписей, Выборка) Экспорт
	
	Результат = 0;  // обнуляем промежуточную переменную
	// Обходим в цикле выборку необходимых данных:
	Пока Выборка.Следующий() Цикл
		//  Получаем рассчитываемую запись регистра 
		//   из набора записей по индексу:
		ЗаписьРегистра = НаборЗаписей[Выборка.НомерСтроки - 1];
		//  Реализуем расчетные формулы 
		//   для каждого имеющегося способа расчета; 
		//   результат запоминаем в 
		//   промежуточной переменной Результат:
		//   ( • • • • • • • • • )
		Если Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.ПоОкладу") Тогда
			Если Выборка.План > 0 Тогда
				Результат = ЗаписьРегистра.Размер * Выборка.Отработано / Выборка.План;
			КонецЕсли;
		ИначеЕсли Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.ЧасовойТариф") Тогда
			Если Выборка.План > 0 Тогда
				Результат = ЗаписьРегистра.Размер * Выборка.Отработано;
			КонецЕсли;
		ИначеЕсли Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.СвободныйГрафик") Тогда
			Если Выборка.Отработано/Выборка.План > 0.8 Тогда
				Результат = (ЗаписьРегистра.Размер * 1.1) * Выборка.Отработано;
			Иначе
				Результат = ЗаписьРегистра.Размер * Выборка.Отработано;
			КонецЕсли;
		ИначеЕсли Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.ШтрафЗаПрогул") Тогда
			Если Выборка.План > 0 Тогда
				Результат = Константы.СуммаШтрафа.Получить() * Выборка.Отработано;
			КонецЕсли;	
		ИначеЕсли Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.Процентом") Тогда
			Результат = ЗаписьРегистра.Размер * Выборка.СуммаБазы / 100;
		ИначеЕсли Выборка.СпособРасчета = ПредопределенноеЗначение("Перечисление.СпособыРасчета.Фиксированно") Тогда
			Результат = ЗаписьРегистра.Размер;
		Иначе
			Результат = 0;
		КонецЕсли; 
		// Помещаем результат в запись регистра:
		ЗаписьРегистра.Результат = Результат * ?(ЗаписьРегистра.Сторно, -1, 1);
	КонецЦикла;
КонецПроцедуры

Процедура ПерерассчитатьНачисления() Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Премии.НомерСтроки КАК НомерСтроки,
	|	Премии.ВидРасчета.СпособРасчета КАК СпособРасчета
	|ПОМЕСТИТЬ ПодлежатПерерасчету
	|ИЗ
	|	РегистрРасчета.Премии КАК Премии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.ПерерасчетПремий КАК ПерерасчетПремий
	|		ПО Премии.Регистратор = ПерерасчетПремий.ОбъектПерерасчета
	|			И Премии.ВидРасчета = ПерерасчетПремий.ВидРасчета
	|			И Премии.Сотрудник = ПерерасчетПремий.Сотрудник
	|			И Премии.Должность = ПерерасчетПремий.Должность
	|ГДЕ
	|	Премии.Регистратор = &Регистратор
	|	И Премии.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодлежатПерерасчету.НомерСтроки,
	|	ПодлежатПерерасчету.СпособРасчета,
	|	ЕСТЬNULL(ПремииБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ПремииБазаПремии.РезультатБаза, 0) КАК СуммаБазы
	|ИЗ
	|	ПодлежатПерерасчету КАК ПодлежатПерерасчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаОсновныеНачисления(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Регистратор
	|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаОсновныеНачисления
	|		ПО ПодлежатПерерасчету.НомерСтроки = ПремииБазаОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаПремии(
	|				&Измерения,
	|				&Измерения,
	|				,
	|				Регистратор = &Регистратор
	|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаПремии
	|		ПО ПодлежатПерерасчету.НомерСтроки = ПремииБазаПремии.НомерСтроки");
	
	//// Перебрать группировку по регистратору.
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	//Регистратор = ВыборкаПоРегистратору.ОбъектПерерасчета;
	//	// Перебрать группировку по сотрудникам для выбранного регистратора  и создать список сотрудников.
	//	ВыборкаПоСотрудникам = ВыборкаПоРегистратору.Выбрать();
	//	СписокСотрудников.Очистить();
	//	Пока ВыборкаПоСотрудникам.Следующий() Цикл
	//		СписокСотрудников.Добавить(ВыборкаПоСотрудникам.Сотрудник);
	//	КонецЦикла;
	//	// Получить набор записей регистра расчета для выбранного регистратора.
	//	НаборЗаписей = РегистрыРасчета.Премии.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Регистратор.Значение = Регистратор;
	//	НаборЗаписей.Прочитать();
	//	//////////РассчитатьНачисления(НаборЗаписей, ТребуемыйВидРасчета, СписокСотрудников);
	//	//НаборЗаписей.Записать( , Истина);
	//	// Очистить перерассчитанные записи в перерасчете.
	//	НаборЗаписейПерерасчета = РегистрыРасчета.Премии.Перерасчеты.Перерасчет.СоздатьНаборЗаписей();
	//	НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Регистратор;
	//	//НаборЗаписейПерерасчета.Записать();
	//КонецЦикла;

КонецПроцедуры

Процедура ПерерассчитатьНачисления111111111111111111(ТребуемыйВидРасчета) Экспорт

// Здесь следует выбрать из набора записей перерасчета записи в следующей последовательности:
// записи документа1 для сотрудников из списка,
// записи документа2 для сотрудников из списка и т. д.

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|        НачисленияПерерасчет.ОбъектПерерасчета,
	|        НачисленияПерерасчет.Сотрудник
	|ИЗ
	|        РегистрРасчета.Начисления.Перерасчет КАК НачисленияПерерасчет
	|ГДЕ
	|        НачисленияПерерасчет.ВидРасчета = &ТребуемыйВидРасчета
	|ИТОГИ ПО
	|        НачисленияПерерасчет.ОбъектПерерасчета");
	Запрос.УстановитьПараметр("ТребуемыйВидРасчета", ТребуемыйВидРасчета);
	
	СписокСотрудников = Новый СписокЗначений;
	// Перебрать группировку по регистратору.
	ВыборкаПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		Регистратор = ВыборкаПоРегистратору.ОбъектПерерасчета;
		// Перебрать группировку по сотрудникам для выбранного регистратора  и создать список сотрудников.
		ВыборкаПоСотрудникам = ВыборкаПоРегистратору.Выбрать();
		СписокСотрудников.Очистить();
		Пока ВыборкаПоСотрудникам.Следующий() Цикл
			СписокСотрудников.Добавить(ВыборкаПоСотрудникам.Сотрудник);
		КонецЦикла;
		// Получить набор записей регистра расчета для выбранного регистратора.
		НаборЗаписей = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Значение = Регистратор;
		НаборЗаписей.Прочитать();
		//////////РассчитатьНачисления(НаборЗаписей, ТребуемыйВидРасчета, СписокСотрудников);
		НаборЗаписей.Записать( , Истина);
		// Очистить перерассчитанные записи в перерасчете.
		НаборЗаписейПерерасчета = РегистрыРасчета.Начисления.Перерасчеты.Перерасчет.СоздатьНаборЗаписей();
		НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Регистратор;
		НаборЗаписейПерерасчета.Записать();
	КонецЦикла;

КонецПроцедуры