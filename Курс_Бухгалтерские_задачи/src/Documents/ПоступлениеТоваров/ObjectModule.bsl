
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ЦеныПоставщиков
	Движения.ЦеныПоставщиков.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ЦеныПоставщиков.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Цена = ТекСтрокаТовары.Цена;
	КонецЦикла;

	// регистр Проводки 
	Движения.Проводки.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ТекСтрокаТовары.СчетУчета;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Номенклатура", ТекСтрокаТовары.Номенклатура);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Склады", Склад);
		Движение.КоличествоДт = ТекСтрокаТовары.Количество;
		
		Если Не ТекСтрокаТовары.СчетУчета.Забалансовый Тогда
			Движение.СчетКт = ПланыСчетов.Бухгалтерский.Поставщики;
			БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", Контрагент);
			БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Договоры", Договор);
		КонецЕсли;
		
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Содержание = "приход товара";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);
	КонецЦикла;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
