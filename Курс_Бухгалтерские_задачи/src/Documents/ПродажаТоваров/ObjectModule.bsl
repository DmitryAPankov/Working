
Процедура ОбработкаПроведенияПервая(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Проводки 
	Движения.Проводки.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Номенклатура", ТекСтрокаТовары.Номенклатура);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Склады", Склад);
		Движение.КоличествоКт = ТекСтрокаТовары.Количество;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаТовары.Стоимость;
		Движение.Содержание = "продажа товаров";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);
		
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
		Движение.Содержание = "продажа товаров";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);
	КонецЦикла;
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = ТекСтрокаУслуги.Сумма;
		Движение.Содержание = "продажа услуг";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);
	КонецЦикла;
	

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ОбработкаПроведенияВторая(Отказ, Режим)
	
	ПВХ = ПланыВидовХарактеристик.ВидыСубконто;

	движения.Проводки.Записать();

	МенеджерВТ = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;

	ВидыСубконтоНС = Новый Массив;
	ВидыСубконтоНС.Добавить(ПВХ.Номенклатура); //1
	ВидыСубконтоНС.Добавить(ПВХ.Склады); //2
	Запрос.УстановитьПараметр("ВидыСубконтоНС", ВидыСубконтоНС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", МоментВремени());

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПродажаТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПродажаТоваровТовары.Количество,
	|	ПродажаТоваровТовары.Сумма,
	|	ПродажаТоваровТовары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
	|ГДЕ
	|	ПродажаТоваровТовары.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура
	|ИЗ
	|	Товары КАК Товары";

	Результат = Запрос.Выполнить();

	Блокировка = Новый БлокировкаДанных;
	ЭлементБД = Блокировка.Добавить("РегистрБухгалтерии.Проводки");
	ЭлементБД.УстановитьЗначение("Счет", ПланыСчетов.Бухгалтерский.Товары);
	ЭлементБД.УстановитьЗначение("Организация", Организация);
	ЭлементБД.УстановитьЗначение("Подразделение", Подразделение);
	ЭлементБД.УстановитьЗначение(ПВХ.Склады, Склад);
	ЭлементБД.ИсточникДанных = Результат;
	ЭлементБД.ИспользоватьИзИсточникаДанных(ПВХ.Номенклатура, "Номенклатура");
	ЭлементБД.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();	

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроводкиОстатки.Субконто1 КАК Субконто1,
	|	ПроводкиОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ПроводкиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Проводки.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары),
	|			&ВидыСубконтоНС,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Товары.Номенклатура
	|					ИЗ
	|						Товары КАК Товары)) КАК ПроводкиОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроводкиОстатки.Субконто1 КАК Субконто1,
	|	ПроводкиОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПоСкладу
	|ИЗ
	|	РегистрБухгалтерии.Проводки.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары),
	|			&ВидыСубконтоНС,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто2 = &Склад
	|				И Субконто1 В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Товары.Номенклатура
	|					ИЗ
	|						Товары КАК Товары)) КАК ПроводкиОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Количество КАК Количество,
	|	Товары.Сумма КАК Сумма,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК ОстСум,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК ОстКол,
	|	ЕСТЬNULL(ОстаткиПоСкладу.КоличествоОстаток, 0) КАК ОстКолСклад
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО Товары.Номенклатура = Остатки.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоСкладу КАК ОстаткиПоСкладу
	|		ПО Товары.Номенклатура = ОстаткиПоСкладу.Субконто1";

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Движения.Проводки.Записывать = Истина;

	Пока Выборка.Следующий() Цикл
		Стоимость = 0;
		Если Выборка.ОстКолСклад < Выборка.Количество Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Товары не хватает";
			Сообщение.Поле = "Товары["+(Выборка.НомерСтроки-1)+"].Количество";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить(); 
			Отказ = Истина;
		Иначе
			Стоимость = ОКР(Выборка.ОстСум*Выборка.Количество/Выборка.ОстКол, 2);
		КонецЕсли;

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,"Контрагенты",Контрагент);
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,"Договоры",Договор);
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.Период = Дата;
		Движение.Сумма = Выборка.Сумма;
		Движение.Содержание = "продажа";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

		Движение = Движения.Проводки.Добавить();
		Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
		Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,"Номенклатура",Выборка.Номенклатура);		
		БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,"Склады",Склад);
		Движение.Период = Дата;
		Движение.Сумма = Стоимость;
		Движение.КоличествоКт = Выборка.Количество;
		Движение.Содержание = "стоимость";
		Движение.Организация = Организация;
		БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

Движения.Проводки.Записывать = Истина;

Движения.Проводки.БлокироватьДляИзменения = Истина;

Для Каждого ТекСтрокаТовары Из Товары Цикл
	Движение = Движения.Проводки.Добавить();
	Движение.СчетДт = ПланыСчетов.Бухгалтерский.Покупатели;
	БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
	БухгалтерияСервер.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Договоры", Договор);
	Движение.СчетКт = ПланыСчетов.Бухгалтерский.Капитал;
	Движение.Период = Дата;
	Движение.Сумма = ТекСтрокаТовары.Сумма;
	Движение.Содержание = "продажа товара";
	Движение.Организация = Организация;
	БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);

	Движение = Движения.Проводки.Добавить();
	Движение.СчетДт = ПланыСчетов.Бухгалтерский.Капитал;
	Движение.СчетКт = ПланыСчетов.Бухгалтерский.Товары;
	БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Номенклатура", ТекСтрокаТовары.Номенклатура);
	БухгалтерияСервер.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Склады", Склад);
	Движение.Период = Дата;
	Движение.Сумма = 0; //или плановая
	движение.КоличествоКт = ТекСтрокаТовары.Количество;
	Движение.Содержание = "стоимость";
	Движение.Организация = Организация;
	БухгалтерияСервер.УстановитьПодразделенияПроводки(Движение, Подразделение, Подразделение);
КонецЦикла;

Движения.Проводки.Записать();

Запрос = Новый Запрос;
Запрос.Текст = 
"ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ПродажаТоваровТовары.Номенклатура
|ПОМЕСТИТЬ Товары
|ИЗ
|	Документ.ПродажаТоваров.Товары КАК ПродажаТоваровТовары
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПроводкиОстатки.Субконто1
|ИЗ
|	РегистрБухгалтерии.Проводки.Остатки(
|			&Период,
|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Бухгалтерский.Товары),
|			&ВидыСубконто,
|			Организация = &Организация
|				И Подразделение = &Подразделение
|				И Субконто2 = &Склад
|				И Субконто1 В
|					(ВЫБРАТЬ
|						Товары.Номенклатура
|					ИЗ
|						Товары КАК Товары)) КАК ПроводкиОстатки
|ГДЕ
|	ПроводкиОстатки.КоличествоОстаток < 0";
Запрос.УстановитьПараметр("Период", Неопределено);
ПВХ = ПланыВидовХарактеристик.ВидыСубконто;
ВидыСубконто = Новый Массив;
ВидыСубконто.Добавить(ПВХ.Номенклатура);
ВидыСубконто.Добавить(ПВХ.Склады);
Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
Запрос.УстановитьПараметр("Организация", Организация);
Запрос.УстановитьПараметр("Подразделение", Подразделение);
Запрос.УстановитьПараметр("Склад", Склад);

Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл
Отбор = Новый Структура("Номенклатура", Выборка.Субконто1);
мСтрок = Товары.НайтиСтроки(Отбор);
Для каждого Стр Из мСтрок Цикл
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Не хватило товара "+Строка(Выборка.Субконто1);
	Сообщение.Поле = "Товары["+(Стр.НомерСтроки-1)+"].Количество";
	Сообщение.УстановитьДанные(ЭтотОбъект);
	Сообщение.Сообщить(); 
	Отказ = Истина;
КонецЦикла; 
КонецЦикла;

КонецПроцедуры
