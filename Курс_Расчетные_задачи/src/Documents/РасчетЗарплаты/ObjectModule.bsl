
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//Первый шаг расчета	
	//Основные начисления
	НаборОсновныеНачисления = Движения.ОсновныеНачисления;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетЗарплатыОсновныеНачисления.Ссылка.ПериодРегистрации,
	|	РасчетЗарплатыОсновныеНачисления.Сотрудник,
	|	РасчетЗарплатыОсновныеНачисления.Должность,
	|	РасчетЗарплатыОсновныеНачисления.ВидРасчета,
	|	РасчетЗарплатыОсновныеНачисления.ПериодДействияНачало,
	|	КОНЕЦПЕРИОДА(РасчетЗарплатыОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) КАК ПериодДействияКонец,
	|	РасчетЗарплатыОсновныеНачисления.БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА РасчетЗарплатыОсновныеНачисления.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыОсновныеНачисления.БазовыйПериодКонец, ДЕНЬ)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	РасчетЗарплатыОсновныеНачисления.Размер,
	|	РасчетЗарплатыОсновныеНачисления.ГрафикРаботы,
	|	РасчетЗарплатыОсновныеНачисления.Сторно
	|ИЗ
	|	Документ.РасчетЗарплаты.ОсновныеНачисления КАК РасчетЗарплатыОсновныеНачисления
	|ГДЕ
	|	РасчетЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетЗарплатыОсновныеНачисления.НомерСтроки";
	Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса,Ссылка,НаборОсновныеНачисления);	
	НаборОсновныеНачисления.Записать(, Ложь);
	
	ТаблицаСторноЗаписей=НаборОсновныеНачисления.ПолучитьДополнение();
	//ТаблицаСторноЗаписей.ВыбратьСтроку(); //вывод таблицы в окно
	Для каждого СтрокаСторно Из ТаблицаСторноЗаписей Цикл
		ДобавитьСтрокуСторно(НаборОсновныеНачисления, СтрокаСторно, ОсновныеНачисления);
	КонецЦикла;
	Записать();
	НаборОсновныеНачисления.Записать(, Ложь);
	
	//Премии
	НаборПремии = Движения.Премии;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетЗарплатыПремии.Ссылка.ПериодРегистрации,
	|	РасчетЗарплатыПремии.Сотрудник,
	|	РасчетЗарплатыПремии.Должность,
	|	РасчетЗарплатыПремии.ВидРасчета,
	|	РасчетЗарплатыПремии.БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА РасчетЗарплатыПремии.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыПремии.БазовыйПериодКонец, ДЕНЬ)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	РасчетЗарплатыПремии.Размер,
	|	РасчетЗарплатыПремии.Сторно
	|ИЗ
	|	Документ.РасчетЗарплаты.Премии КАК РасчетЗарплатыПремии
	|ГДЕ
	|	РасчетЗарплатыПремии.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетЗарплатыПремии.НомерСтроки";
	Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса,Ссылка,НаборПремии);	
	НаборПремии.Записать(, Ложь);
	
	//Удержания
	НаборУдержания = Движения.удержания;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетЗарплатыУдержания.Ссылка.ПериодРегистрации,
	|	РасчетЗарплатыУдержания.Сотрудник,
	|	РасчетЗарплатыУдержания.Должность,
	|	РасчетЗарплатыУдержания.ВидРасчета,
	|	РасчетЗарплатыУдержания.БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА РасчетЗарплатыУдержания.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыУдержания.БазовыйПериодКонец, ДЕНЬ)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	РасчетЗарплатыУдержания.Размер,
	|	РасчетЗарплатыУдержания.Сторно
	|ИЗ
	|	Документ.РасчетЗарплаты.Удержания КАК РасчетЗарплатыУдержания
	|ГДЕ
	|	РасчетЗарплатыУдержания.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетЗарплатыУдержания.НомерСтроки";
	Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса,Ссылка,НаборУдержания);	
	НаборУдержания.Записать(, Ложь);
	
//Второй шаг расчета		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Отработано
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияДанныеГрафика
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.Первичное);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	ВыборкаДляРасчета = Запрос.Выполнить().Выбрать();
	
	Расчеты.РассчитатьЗаписиРегистраРасчета(НаборОсновныеНачисления, ВыборкаДляРасчета);
	
	НаборОсновныеНачисления.Записать(, Истина);
	
//Третий шаг расчета		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|	ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК СуммаБазы
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
		|				&ИзмеренияОсновногоРегистра,
		|				&ИзмеренияБазовогоРегистра,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
		|ГДЕ
		|	ОсновныеНачисления.Регистратор = &Регистратор
		|	И ОсновныеНачисления.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.ЗависимоеПервогоУровня);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Измерения = Новый Массив();
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Должность");
	Запрос.УстановитьПараметр("ИзмеренияОсновногоРегистра", Измерения);
	Запрос.УстановитьПараметр("ИзмеренияБазовогоРегистра", Измерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Расчеты.РассчитатьЗаписиРегистраРасчета(НаборОсновныеНачисления, Выборка);
	НаборОсновныеНачисления.Записать(, Истина);
	
//Четвертый шаг	расчета(повтор второго)
	РассчитатьПремии(НаборПремии, Запрос, Справочники.КатегорииРасчета.Первичное);
	
//Пятый шаг	расчета(повтор третьего)
	РассчитатьПремии(НаборПремии, Запрос, Справочники.КатегорииРасчета.ЗависимоеПервогоУровня);
	
//Шестой шаг расчета(повтор третьего)
	РассчитатьПремии(НаборПремии, Запрос, Справочники.КатегорииРасчета.ЗависимоеВторогоУровня);
	
//Седьмой шаг	расчета(повтор второго)
	РассчитатьУдержания(НаборУдержания, Запрос, Справочники.КатегорииРасчета.Первичное);
	
КонецПроцедуры

Процедура РассчитатьПремии(НаборЗаписей, Запрос, КатегорияРасчета)
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Премии.НомерСтроки КАК НомерСтроки,
		|	Премии.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ЕСТЬNULL(ПремииБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ПремииБазаПремии.РезультатБаза, 0) КАК СуммаБазы
		|ИЗ
		|	РегистрРасчета.Премии КАК Премии
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаОсновныеНачисления(
		|				&ИзмеренияОсновногоРегистра,
		|				&ИзмеренияБазовогоРегистра,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаОсновныеНачисления
		|		ПО Премии.НомерСтроки = ПремииБазаОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаПремии(
		|				&ИзмеренияОсновногоРегистра,
		|				&ИзмеренияБазовогоРегистра,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаПремии
		|		ПО Премии.НомерСтроки = ПремииБазаПремии.НомерСтроки
		|ГДЕ
		|	Премии.Регистратор = &Регистратор
		|	И Премии.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("КатегорияРасчета", КатегорияРасчета);
	Выборка = Запрос.Выполнить().Выбрать();
	Расчеты.РассчитатьЗаписиРегистраРасчета(НаборЗаписей, Выборка);
	НаборЗаписей.Записать(, Истина);

КонецПроцедуры

Процедура РассчитатьУдержания(НаборЗаписей, Запрос, КатегорияРасчета)
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Удержания.НомерСтроки КАК НомерСтроки,
		|	Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|	ЕСТЬNULL(УдержанияБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(УдержанияБазаПремии.РезультатБаза, 0) КАК СуммаБазы
		|ИЗ
		|	РегистрРасчета.Удержания КАК Удержания
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаОсновныеНачисления(
		|				&ИзмеренияОсновногоРегистра,
		|				&ИзмеренияБазовогоРегистра,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаОсновныеНачисления
		|		ПО Удержания.НомерСтроки = УдержанияБазаОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаПремии(
		|				&ИзмеренияОсновногоРегистра,
		|				&ИзмеренияБазовогоРегистра,
		|				,
		|				Регистратор = &Регистратор
		|					И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаПремии
		|		ПО Удержания.НомерСтроки = УдержанияБазаПремии.НомерСтроки
		|ГДЕ
		|	Удержания.Регистратор = &Регистратор
		|	И Удержания.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("КатегорияРасчета", КатегорияРасчета);
	Выборка = Запрос.Выполнить().Выбрать();
	Расчеты.РассчитатьЗаписиРегистраРасчета(НаборЗаписей, Выборка);
	НаборЗаписей.Записать(, Истина);

КонецПроцедуры

Процедура ДобавитьСтрокуСторно(НаборЗаписей, СтрокаСторно, ТабличнаяЧасть)
	ЗаписьРегистра = НаборЗаписей.Добавить();
	
	ЗаписьРегистра.ПериодРегистрации = СтрокаСторно.ПериодРегистрацииСторно;
	ЗаписьРегистра.ПериодДействияНачало = СтрокаСторно.ПериодДействияНачалоСторно;
	ЗаписьРегистра.ПериодДействияКонец = СтрокаСторно.ПериодДействияКонецСторно;
	ЗаписьРегистра.БазовыйПериодНачало = СтрокаСторно.БазовыйПериодНачало;
	ЗаписьРегистра.БазовыйПериодКонец = СтрокаСторно.БазовыйПериодКонец;
	ЗаписьРегистра.ВидРасчета = СтрокаСторно.ВидРасчета;
	ЗаписьРегистра.Сторно = Истина;
	
	ЗаписьРегистра.Сотрудник = СтрокаСторно.Сотрудник;
	ЗаписьРегистра.Должность = СтрокаСторно.Должность;
	
	ЗаписьРегистра.Размер = СтрокаСторно.Размер;
	ЗаписьРегистра.ГрафикРаботы = СтрокаСторно.ГрафикРаботы;
	
	СтрокаТЧ = ТабличнаяЧасть.Добавить();

	СтрокаТЧ.ПериодДействияНачало = СтрокаСторно.ПериодДействияНачалоСторно;
	СтрокаТЧ.ПериодДействияКонец = СтрокаСторно.ПериодДействияКонецСторно;
	СтрокаТЧ.БазовыйПериодНачало = СтрокаСторно.БазовыйПериодНачало;
	СтрокаТЧ.БазовыйПериодКонец = СтрокаСторно.БазовыйПериодКонец;
	СтрокаТЧ.ВидРасчета = СтрокаСторно.ВидРасчета;
	СтрокаТЧ.Сторно = Истина;
	
	СтрокаТЧ.Сотрудник = СтрокаСторно.Сотрудник;
	СтрокаТЧ.Должность = СтрокаСторно.Должность;
	
	СтрокаТЧ.Размер = СтрокаСторно.Размер;
	СтрокаТЧ.ГрафикРаботы = СтрокаСторно.ГрафикРаботы;
КонецПроцедуры





